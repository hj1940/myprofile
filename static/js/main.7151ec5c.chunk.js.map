{"version":3,"sources":["components/column/index.js","components/header/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Column","Component","className","class","href","App","window","addEventListener","this","scrollFunction","document","body","scrollTop","documentElement","getElementById","style","fontSize","id","onInit","typewriter","typeString","callFunction","console","log","pauseFor","deleteAll","start","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gTAsGeA,G,YCnGMC,Y,uLDEjB,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,QACb,uGACA,gEACA,yBAAKA,UAAU,gBAAf,SACA,2BAAG,wGAAH,0GACA,8NACA,+HAEF,yBAAKA,UAAU,QACb,sGACA,gEACA,yBAAKA,UAAU,gBAAf,SACA,2BAAG,+CAAH,2JAEF,yBAAKA,UAAU,QACb,+HACA,gEACA,yBAAKA,UAAU,gBAAf,SACA,2BAAG,iEAAH,gHACA,kJAEF,yBAAKA,UAAU,QACb,kGACA,gEACA,yBAAKA,UAAU,gBAAf,SACA,2BAAG,uEAAH,mFACA,yLAEF,yBAAKA,UAAU,QACb,4JACA,gEACA,yBAAKA,UAAU,gBAAf,SACA,2BAAG,4DAAH,qHACA,0HACA,oJAGJ,yBAAKA,UAAU,eACb,yBAAKA,UAAU,QACb,wCACA,yBAAKA,UAAU,gBAAf,SACA,yBAAKA,UAAU,kBACb,2BAAG,uFACH,2BAAG,uDACH,yCACA,8FACA,4CACA,gDACA,+KAGJ,yBAAKA,UAAU,QACb,qCACA,mCACA,yBAAKC,MAAM,gBACT,yBAAKA,MAAM,iBAGb,kCACA,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,gBAGb,yCACA,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,eAGb,kCACA,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,gBAGb,kCACA,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,gBAGb,sCACA,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,gBAIf,yBAAKD,UAAU,QACb,wCACA,2BAAG,uBAAGC,MAAM,iBAAZ,IAAgC,uBAAGC,KAAK,6BAAR,qC,GA3FvBH,c,gBE8CNI,E,4LAxCXC,OAAOC,iBAAiB,SAAUC,KAAKC,kB,uCAInCC,SAASC,KAAKC,UAAY,IAAMF,SAASG,gBAAgBD,UAAY,GACvEF,SAASI,eAAe,UAAUC,MAAMC,SAAW,OAEnDN,SAASI,eAAe,UAAUC,MAAMC,SAAW,S,+BAIrD,OACE,yBAAKd,UAAW,OACd,yBAAKA,UAAU,aAAae,GAAG,WAG/B,yBAAKA,GAAG,SAASf,UAAU,iBAC3B,kBAAC,IAAD,CACAgB,OAAQ,SAACC,GACPA,EAAWC,WAAW,uCACrBC,cAAa,WACZC,QAAQC,IAAI,wBAEbC,SAAS,MACTC,YACAJ,cAAa,WACZC,QAAQC,IAAI,+BAEbG,YAIH,6BACE,kBAAC,EAAD,Y,GAnCQzB,aCKE0B,QACW,cAA7BrB,OAAOsB,SAASC,UAEe,UAA7BvB,OAAOsB,SAASC,UAEhBvB,OAAOsB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASI,eAAe,SD6H3C,kBAAmBmB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlB,QAAQkB,MAAMA,EAAMC,c","file":"static/js/main.7151ec5c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './index.css'\r\n\r\nclass Column extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"leftcolumn\">\r\n          <div className=\"card\">\r\n            <h2>노루페인트 CDP(Customer Data Platform) 구축</h2>\r\n            <h5>기간 : 2019.12 ~ 2020.03</h5>\r\n            <div className=\"fakeimg h200\">Image</div>\r\n            <p><strong>JAVA(전자정부프레임워크) + MySQL</strong> 이용한 사용자 데이터 분석 시스템 개발</p>\r\n            <p>매출 분석 시스템 및 마케팅 대상으로 푸쉬 메세지에 대한 통계 분석 시스템</p>\r\n            <p>마케팅 대상 추출하는 분석 기능 개발</p>\r\n          </div>\r\n          <div className=\"card\">\r\n            <h2>웹 사이트 개발 및 유지보수</h2>\r\n            <h5>기간 : 2019.10 ~ 2019.11</h5>\r\n            <div className=\"fakeimg h200\">Image</div>\r\n            <p><strong>PHP + MySQL</strong> 이용한 국제과학영재교육센터 홈페이지 구축 및 유지보수</p>\r\n          </div>\r\n          <div className=\"card\">\r\n            <h2>입학지원 웹 사이트 운영 및 유지보수</h2>\r\n            <h5>기간 : 2019.06 ~ 2020.03</h5>\r\n            <div className=\"fakeimg h200\">Image</div>\r\n            <p><strong>ASP(or PHP) + MSSQL(or MySQL)</strong> 이용한 영재교육원 입학 지원 시스템 개발</p>\r\n            <p>전형료 결제를 위한 이니시스 결제 모듈 연동</p>\r\n          </div>\r\n          <div className=\"card\">\r\n            <h2>오리온 제주용암수 ERP 구축</h2>\r\n            <h5>기간 : 2018.05 ~ 2019.05</h5>\r\n            <div className=\"fakeimg h200\">Image</div>\r\n            <p><strong>JAVA(Spring Framework) + PostgreSQL</strong> 이용한 ERP 통합관리시스템 개발</p>\r\n            <p>기업 분석 정보와 손익 자료를 분석하여 c3 기반인 차트 API 적용</p>\r\n          </div>\r\n          <div className=\"card\">\r\n            <h2>대학교 사이버강의 커뮤니티 어플리케이션 개발</h2>\r\n            <h5>기간 : 2017.09 ~ 2017.11</h5>\r\n            <div className=\"fakeimg h200\">Image</div>\r\n            <p><strong>Android + MySQL + SQLite</strong> 이용한 안드로이드 기반 어플리케이션 개발</p>\r\n            <p>Firebase를 이용한 실시간 채팅 기능 개발</p>\r\n            <p>Calendar 라이브러리를 이용한 스케줄러 기능 개발</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"rightcolumn\">\r\n          <div className=\"card\">\r\n            <h2>About Me</h2>\r\n            <div className=\"fakeimg h100\">Image</div>\r\n            <div className=\"content-center\">\r\n              <p><strong>김희진(金熙珍 KIM HUI JIN)</strong></p>\r\n              <p><strong>Back-end Developer</strong></p>\r\n              <p>1995.11.02</p>\r\n              <p>부산광역시 / 서울특별시</p>\r\n              <p>010-8260-1940</p>\r\n              <p>ttlle12@naver.com</p>\r\n              <p>한국교통대학교 컴퓨터정보공학과(공학교육인증 이수)</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <h3>Skill</h3>\r\n            <p>JAVA</p>\r\n            <div class=\"container-sk\">\r\n              <div class=\"skills java\"></div>\r\n            </div>\r\n\r\n            <p>SQL</p>\r\n            <div class=\"container-sk\">\r\n              <div class=\"skills sql\"></div>\r\n            </div>\r\n\r\n            <p>JavaScript</p>\r\n            <div class=\"container-sk\">\r\n              <div class=\"skills js\"></div>\r\n            </div>\r\n\r\n            <p>PHP</p>\r\n            <div class=\"container-sk\">\r\n              <div class=\"skills php\"></div>\r\n            </div>\r\n\r\n            <p>ASP</p>\r\n            <div class=\"container-sk\">\r\n              <div class=\"skills asp\"></div>\r\n            </div>\r\n\r\n            <p>Android</p>\r\n            <div class=\"container-sk\">\r\n              <div class=\"skills ad\"></div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"card\">\r\n            <h3>Web Site</h3>\r\n            <p><i class=\"fa fa-github\"></i> <a href=\"https://github.com/hj1940\">https://github.com/hj1940</a></p>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Column\r\n","import React, { Component } from 'react';\r\nimport './index.css'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"topnav\" id=\"myTopnav\">\r\n        <a href=\"#home\" className=\"active\">Home</a>\r\n        <a href=\"#news\">News</a>\r\n        <a href=\"#contact\">Contact</a>\r\n        <a href=\"#about\">About</a>\r\n        <a href=\"javascript:void(0);\" className=\"icon\" onClick={this.myFunction.bind()}>\r\n          <i className=\"fa fa-bars\"></i>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  myFunction(){\r\n    var x = document.getElementById(\"myTopnav\");\r\n       if (x.className === \"topnav\") {\r\n         x.className += \" responsive\";\r\n       } else {\r\n         x.className = \"topnav\";\r\n       }\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\nimport './index.css'\nimport Header from '../header'\nimport Column from '../column'\n\nimport Typewriter from 'typewriter-effect';\n\nclass App extends Component {\n  componentDidMount() {\n    window.addEventListener('scroll', this.scrollFunction);\n  }\n\n  scrollFunction() {\n    if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {\n      document.getElementById(\"header\").style.fontSize = \"30px\";\n    } else {\n      document.getElementById(\"header\").style.fontSize = \"90px\";\n    }\n  }\n  render() {\n    return (\n      <div className={\"App\"}>\n        <div className=\"App-header\" id=\"header\">\n\n        </div>\n        <div id=\"typing\" className=\"contents-main\">\n        <Typewriter\n        onInit={(typewriter) => {\n          typewriter.typeString('Software engineer Kim Hui Jin is...')\n          .callFunction(() => {\n            console.log('String typed out!');\n          })\n          .pauseFor(2500)\n          .deleteAll()\n          .callFunction(() => {\n            console.log('All strings were deleted');\n          })\n          .start();\n        }}\n        />\n        </div>\n        <div>\n          <Column/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}